class SVG {
  String[] file;
  int filewidth, fileheight;


  void writeToSVG(String path) {
    file = new String[0];
    filewidth=(int)(w.w+u/2);
    fileheight=(int)(w.h+u/2);
    beginSVG();
    renderAxes();
    renderLines();
    endSVG();
    saveStrings(path, file);
  }

  void beginSVG() {
    file=append(file, "<?xml version='1.0'?>");
    file=append(file, "<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN'");
    file=append(file, "'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'>");
    file=append(file, "<svg xmlns:xlink='http://www.w3.org/1999/xlink' style='fill-opacity:1; color-rendering:auto; color-interpolation:auto; text-rendering:auto; stroke:black; stroke-linecap:square; stroke-miterlimit:10; shape-rendering:auto; stroke-opacity:1; fill:black; stroke-dasharray:none; font-weight:normal; stroke-width:1; font-family:"+"Dialog"+"; font-style:normal; stroke-linejoin:miter; font-size:12px; stroke-dashoffset:0; image-rendering:auto;' width='"+filewidth+"' height='"+fileheight+"' xmlns='http://www.w3.org/2000/svg'");
    file=append(file, "");

    file=append(file, "><!--Generated by Lim Shao En-->");
    file=append(file, "<defs id='genericDefs'/>");
  }

  void renderAxes() {
    file=append(file, "<g style='stroke-linecap:round; stroke-width:4;'>");
 
    file=append(file, "<line style='fill:none;' x1='"+toAbs(0, 0)+"' y1='"+toAbs(0, 1)+"' x2='"+toAbs(0, 0)+"' y2='"+toAbs(w.h-3*w.m, 1)+"'/>");
    file=append(file, "<line style='fill:none;' x1='"+toAbs(0, 0)+"' y1='"+toAbs(0, 1)+"' x2='"+toAbs(w.w-10*w.m, 0)+"' y2='"+toAbs(0, 1)+"'/>");
    file=append(file, "<line style='fill:none;' x1='"+toAbs(0, 0)+"' y1='"+toAbs(w.h-3*w.m, 1)+"' x2='"+toAbs(-w.m/4, 0)+"' y2='"+toAbs(w.h-3.5*w.m, 1)+"'/>");
    file=append(file, "<line style='fill:none;' x1='"+toAbs(0, 0)+"' y1='"+toAbs(w.h-3*w.m, 1)+"' x2='"+toAbs(w.m/4, 0)+"' y2='"+toAbs(w.h-3.5*w.m, 1)+"'/>");
    file=append(file, "<line style='fill:none;' x1='"+toAbs(w.w-10*w.m, 0)+"' y1='"+toAbs(0, 1)+"' x2='"+toAbs(w.w-10.5*w.m, 0)+"' y2='"+toAbs(w.m/4, 1)+"'/>");
    file=append(file, "<line style='fill:none;' x1='"+toAbs(w.w-10*w.m, 0)+"' y1='"+toAbs(0, 1)+"' x2='"+toAbs(w.w-10.5*w.m, 0)+"' y2='"+toAbs(-w.m/4, 1)+"'/>");

    file=append(file, "</g>");
  }
  
  void renderLines() {
    file=append(file, "<g style='stroke-linecap:round; stroke-width:4; fill:transparent'>");
    for (Line l : lines) {
      if (l.type==0) {
        if(l.n==1){
        file=append(file, "<line style='fill:none;' x1='"+toAbs(l.p[0].x, 0)+"' y1='"+toAbs(l.p[0].y, 1)+"' x2='"+toAbs(l.p[1].x, 0)+"' y2='"+toAbs(l.p[1].y, 1)+"'/>");
      }else if(l.n==2){
      file=append(file,"<path d='M "+ toAbs(l.p[0].x, 0)+" " +toAbs(l.p[0].y, 1) +" Q" +toAbs(l.p[1].x, 0)+" " +toAbs(l.p[1].y, 1)+", "+toAbs(l.p[2].x, 0)+" "+toAbs(l.p[2].y, 1)+"'/>");
      
      }
    }
     
    }
    file=append(file, "</g>");
  }
  void endSVG() {
    file=append(file, "</svg>");
  }


  float toAbs(float val, int dim) {
    if (dim==0) {
      return (w.x+3*w.m+val-u/2);
    } else if (dim==1) {
      return (fileheight-w.m-val-u/2);
    }
    return val;
  }
}
